version: "3.5"

services:

  db:
    build:
      context: db/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./data/db:/var/lib/mysql

  front:
    build:
      context: front/
    environment:
      VITE_APP_API_HOST: ${API_URL}
    ports:
      - ${FRONT_APP_PORT}:3000
    volumes:
      - ./front/www/:/front_app/

  api:
    depends_on:
      - ${DOCKER_DB_SERVICE}
    build:
      context: api/
    environment:
      DB_HOST: ${DOCKER_DB_SERVICE}
      DB_PORT: ${MYSQL_PORT}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      APP_PORT: 3000
      APP_HOST_REGEX: ${API_HOST}
    ports:
      - ${API_PORT}:3000
    volumes:
      - ./api/www/:/api/

  relayer:
    build:
      context: relayer/
    environment:
      PRIVATE_KEY: ${RELAYER_PRIVATE_KEY}
      API_URL: ${API_URL}
      SQS_QUEUE_URL: ${AWS_SQS_QUEUE_URL}
      REGION: ${AWS_SQS_REGION}
      ACCESS_KEY: ${AWS_SQS_ACCESS_KEY}
      SECRET: ${AWS_SQS_SECRET}
    network_mode: host
    volumes:
      - ./relayer/www/:/relayer/

  localstack:
    image: localstack/localstack:0.14.3
    environment:
      AWS_DEFAULT_REGION: ${AWS_SQS_REGION}
      EDGE_PORT: 4566
      SERVICES: sqs
      DATA_DIR: /tmp/localstack/data
    ports:
      - ${LOCALSTACK_PORT}:4566
    volumes:
      - ./data/localstack:/tmp/localstack/data
      - /var/run/docker.sock:/var/run/docker.sock

  hardhat:
    build:
      context: contracts/
    environment:
      MNEMONIC: ${MNEMONIC}
      RPC_NODE_FANTOM: ${fantom_RPC_NODE}
      RPC_NODE_POLYGON: ${polygon_RPC_NODE}
      CHAIN_ID_FANTOM: ${fantom_CHAIN_ID}
      CHAIN_ID_POLYGON: ${polygon_CHAIN_ID}
    volumes:
      - ./contracts/www/:/code

networks:
  default:
    name: ${DOCKER_NETWORK_NAME}
