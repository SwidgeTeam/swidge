name: Deploy Frontend

on:
  workflow_call:
    inputs:
      api-url:
        required: true
        description: 'URL of the API'
        type: string
    secrets:
      AWS_S3_BUCKET:
        description: 'Bucket name where the build will be deployed'
        required: true
      AWS_ACCESS_KEY_ID:
        description: 'Access key ID of the account with rights'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'Secret key of the account with rights'
        required: true
      DISTRIBUTION:
        description: 'AWS distribution name that needs to be invalidated'
        required: true
      RPC_NODE_POLYGON:
        description: 'RPC node for Polygon'
        required: true
      RPC_NODE_FANTOM:
        description: 'RPC node for Fantom'
        required: true
      RPC_NODE_BSC:
        description: 'RPC node for BSC'
        required: true
      RPC_NODE_OPTIMISM:
        description: 'RPC node for Optimism'
        required: true

env:
  VITE_APP_API_HOST: ${{inputs.api-url}}
  VITE_APP_RPC_NODE_POLYGON: ${{secrets.RPC_NODE_POLYGON}}
  VITE_APP_RPC_NODE_FANTOM: ${{secrets.RPC_NODE_FANTOM}}
  VITE_APP_RPC_NODE_BSC: ${{secrets.RPC_NODE_BSC}}
  VITE_APP_RPC_NODE_AVALANCHE: ${{secrets.RPC_NODE_AVALANCHE}}
  VITE_APP_RPC_NODE_OPTIMISM: ${{secrets.RPC_NODE_OPTIMISM}}
  root-path: front/www

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
      fail-fast: false

    defaults:
      run:
        working-directory: ./${{ env.root-path }}

    steps:
      - uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
          cache: 'pnpm'
          cache-dependency-path: ${{ env.root-path }}/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Build Project
        run: pnpm run build

      - name: Archive Build
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ${{ env.root-path }}/dist

  deployment:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download Dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ${{ env.root-path }}/dist

      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          SOURCE_DIR: ''${{ env.root-path }}/dist'

      - uses: chetan/invalidate-cloudfront-action@v2
        env:
          PATHS: ''/*'
          AWS_REGION: 'us-east-1'
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
